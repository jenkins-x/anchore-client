// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSystemPruneCandidatesParams creates a new GetSystemPruneCandidatesParams object
// with the default values initialized.
func NewGetSystemPruneCandidatesParams() *GetSystemPruneCandidatesParams {
	var ()
	return &GetSystemPruneCandidatesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSystemPruneCandidatesParamsWithTimeout creates a new GetSystemPruneCandidatesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSystemPruneCandidatesParamsWithTimeout(timeout time.Duration) *GetSystemPruneCandidatesParams {
	var ()
	return &GetSystemPruneCandidatesParams{

		timeout: timeout,
	}
}

// NewGetSystemPruneCandidatesParamsWithContext creates a new GetSystemPruneCandidatesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSystemPruneCandidatesParamsWithContext(ctx context.Context) *GetSystemPruneCandidatesParams {
	var ()
	return &GetSystemPruneCandidatesParams{

		Context: ctx,
	}
}

// NewGetSystemPruneCandidatesParamsWithHTTPClient creates a new GetSystemPruneCandidatesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSystemPruneCandidatesParamsWithHTTPClient(client *http.Client) *GetSystemPruneCandidatesParams {
	var ()
	return &GetSystemPruneCandidatesParams{
		HTTPClient: client,
	}
}

/*GetSystemPruneCandidatesParams contains all the parameters to send to the API endpoint
for the get system prune candidates operation typically these are written to a http.Request
*/
type GetSystemPruneCandidatesParams struct {

	/*Dangling
	  filter only disconnected resources

	*/
	Dangling *bool
	/*Olderthan
	  filter only resources older than specified number of seconds

	*/
	Olderthan *int64
	/*Resourcetype
	  resource type

	*/
	Resourcetype string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get system prune candidates params
func (o *GetSystemPruneCandidatesParams) WithTimeout(timeout time.Duration) *GetSystemPruneCandidatesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get system prune candidates params
func (o *GetSystemPruneCandidatesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get system prune candidates params
func (o *GetSystemPruneCandidatesParams) WithContext(ctx context.Context) *GetSystemPruneCandidatesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get system prune candidates params
func (o *GetSystemPruneCandidatesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get system prune candidates params
func (o *GetSystemPruneCandidatesParams) WithHTTPClient(client *http.Client) *GetSystemPruneCandidatesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get system prune candidates params
func (o *GetSystemPruneCandidatesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDangling adds the dangling to the get system prune candidates params
func (o *GetSystemPruneCandidatesParams) WithDangling(dangling *bool) *GetSystemPruneCandidatesParams {
	o.SetDangling(dangling)
	return o
}

// SetDangling adds the dangling to the get system prune candidates params
func (o *GetSystemPruneCandidatesParams) SetDangling(dangling *bool) {
	o.Dangling = dangling
}

// WithOlderthan adds the olderthan to the get system prune candidates params
func (o *GetSystemPruneCandidatesParams) WithOlderthan(olderthan *int64) *GetSystemPruneCandidatesParams {
	o.SetOlderthan(olderthan)
	return o
}

// SetOlderthan adds the olderthan to the get system prune candidates params
func (o *GetSystemPruneCandidatesParams) SetOlderthan(olderthan *int64) {
	o.Olderthan = olderthan
}

// WithResourcetype adds the resourcetype to the get system prune candidates params
func (o *GetSystemPruneCandidatesParams) WithResourcetype(resourcetype string) *GetSystemPruneCandidatesParams {
	o.SetResourcetype(resourcetype)
	return o
}

// SetResourcetype adds the resourcetype to the get system prune candidates params
func (o *GetSystemPruneCandidatesParams) SetResourcetype(resourcetype string) {
	o.Resourcetype = resourcetype
}

// WriteToRequest writes these params to a swagger request
func (o *GetSystemPruneCandidatesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Dangling != nil {

		// query param dangling
		var qrDangling bool
		if o.Dangling != nil {
			qrDangling = *o.Dangling
		}
		qDangling := swag.FormatBool(qrDangling)
		if qDangling != "" {
			if err := r.SetQueryParam("dangling", qDangling); err != nil {
				return err
			}
		}

	}

	if o.Olderthan != nil {

		// query param olderthan
		var qrOlderthan int64
		if o.Olderthan != nil {
			qrOlderthan = *o.Olderthan
		}
		qOlderthan := swag.FormatInt64(qrOlderthan)
		if qOlderthan != "" {
			if err := r.SetQueryParam("olderthan", qOlderthan); err != nil {
				return err
			}
		}

	}

	// path param resourcetype
	if err := r.SetPathParam("resourcetype", o.Resourcetype); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
