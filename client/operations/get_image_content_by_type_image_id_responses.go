// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/jenkins-x/anchore-client/models"
)

// GetImageContentByTypeImageIDReader is a Reader for the GetImageContentByTypeImageID structure.
type GetImageContentByTypeImageIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetImageContentByTypeImageIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetImageContentByTypeImageIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetImageContentByTypeImageIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetImageContentByTypeImageIDOK creates a GetImageContentByTypeImageIDOK with default headers values
func NewGetImageContentByTypeImageIDOK() *GetImageContentByTypeImageIDOK {
	return &GetImageContentByTypeImageIDOK{}
}

/*GetImageContentByTypeImageIDOK handles this case with default header values.

Content of specified type from the image
*/
type GetImageContentByTypeImageIDOK struct {
	Payload *models.ContentResponse
}

func (o *GetImageContentByTypeImageIDOK) Error() string {
	return fmt.Sprintf("[GET /images/by_id/{imageId}/content/{ctype}][%d] getImageContentByTypeImageIdOK  %+v", 200, o.Payload)
}

func (o *GetImageContentByTypeImageIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetImageContentByTypeImageIDInternalServerError creates a GetImageContentByTypeImageIDInternalServerError with default headers values
func NewGetImageContentByTypeImageIDInternalServerError() *GetImageContentByTypeImageIDInternalServerError {
	return &GetImageContentByTypeImageIDInternalServerError{}
}

/*GetImageContentByTypeImageIDInternalServerError handles this case with default header values.

Internal error
*/
type GetImageContentByTypeImageIDInternalServerError struct {
	Payload *models.APIErrorResponse
}

func (o *GetImageContentByTypeImageIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /images/by_id/{imageId}/content/{ctype}][%d] getImageContentByTypeImageIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetImageContentByTypeImageIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
