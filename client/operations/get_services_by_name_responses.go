// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/jenkins-x/anchore-client/models"
)

// GetServicesByNameReader is a Reader for the GetServicesByName structure.
type GetServicesByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServicesByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetServicesByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetServicesByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetServicesByNameOK creates a GetServicesByNameOK with default headers values
func NewGetServicesByNameOK() *GetServicesByNameOK {
	return &GetServicesByNameOK{}
}

/*GetServicesByNameOK handles this case with default header values.

Service Info
*/
type GetServicesByNameOK struct {
	Payload models.ServiceList
}

func (o *GetServicesByNameOK) Error() string {
	return fmt.Sprintf("[GET /system/services/{servicename}][%d] getServicesByNameOK  %+v", 200, o.Payload)
}

func (o *GetServicesByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServicesByNameInternalServerError creates a GetServicesByNameInternalServerError with default headers values
func NewGetServicesByNameInternalServerError() *GetServicesByNameInternalServerError {
	return &GetServicesByNameInternalServerError{}
}

/*GetServicesByNameInternalServerError handles this case with default header values.

Internal Error
*/
type GetServicesByNameInternalServerError struct {
	Payload *models.APIErrorResponse
}

func (o *GetServicesByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /system/services/{servicename}][%d] getServicesByNameInternalServerError  %+v", 500, o.Payload)
}

func (o *GetServicesByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
